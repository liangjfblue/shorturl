// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"backend/internal/component"
	"backend/internal/config"
	"backend/internal/dao/redis"
	"backend/internal/dao/repo"
	"backend/internal/handler"
	"backend/internal/router"
	"backend/internal/server"
	"backend/internal/service"
)

// Injectors from wire.go:

func wireServer() (*server.Server, func(), error) {
	configConfig := config.NewConfig()
	logConfig := config.NewLogConf(configConfig)
	logger := component.NewLogger(logConfig)
	iRedis, cleanup, err := redis.NewRedis(configConfig)
	if err != nil {
		return nil, nil, err
	}
	db := repo.NewDB(configConfig)
	repoShortUrl := repo.NewRepoShortUrl(db)
	svcShort := service.NewSvcShort(logger, iRedis, repoShortUrl)
	shortHandler := handler.NewShortHandler(svcShort)
	engine := router.NewRouter(configConfig, shortHandler)
	httpServer := server.NewHttpServer(configConfig, engine)
	serverServer := server.NewServer(configConfig, logger, httpServer)
	return serverServer, func() {
		cleanup()
	}, nil
}
